/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 * @flow
 */

/**
 * @typedef {$PropertyType<$Exports<"../Base/Navigator">, "default">} Navigator
 */
declare export class Navigation {
  static EVENTS: {
    LOCK: string,
    UNLOCK: string,
    WILL_BLUR: string,
    BLUR: string,
    WILL_FOCUS: string,
    FOCUS: string,
    ANDROID_BACK: string,
    ...
  };

  /**
 * @type {{
[name: string]: Navigator,...
}}
 */
  navigators: {
    [name: string]: Navigator,
    ...
  };

  /**
   * @type {Array<string>}
   */
  history: Array<string>;
  locked: boolean;
  lockCounter: number;

  /**
   * @param {string} eventId
   * @param {Function} fn
   */
  on: (eventId: string, fn: Function) => void;

  /**
   * @param {string} eventId
   * @param {Function} fn
   */
  once: (eventId: string, fn: Function) => void;

  /**
   * @param {string} eventId
   * @param {Function} fn
   */
  off: (eventId: string, fn: Function) => void;

  /**
   * @param {string} eventId
   * @param {any} [args]
   */
  emit: (eventId: string, args?: any) => void;

  /**
   * @param {...Navigator} navigators
   */
  addNavigators: (
    ...navigators: $PropertyType<$Exports<"../Base/Navigator">, "default">[]
  ) => void;
  lock: () => void;
  unlock: () => void;
  wait: () => Promise<any>;

  /**
   * @param {string} navigatorName
   * @param {string} sceneName
   * @param {number} duration
   */
  go: (
    navigatorName: string,
    sceneName: string,
    duration: number
  ) => Promise<void>;

  /**
   * @param {string} navigatorName
   */
  push: (navigatorName: string) => void;

  /**
   * @param {string} navigatorName
   * @param {number} duration
   */
  back: (navigatorName: string, duration: number) => Promise<void>;
  reset: () => Promise<void[]>;
  current: () => string;

  /**
   * @param {string} id
   */
  androidBack: (id: string) => void;
  id: () => string | void;
}
declare var _default: Navigation;
declare export default typeof _default;
export type Navigator = $PropertyType<$Exports<"../Base/Navigator">, "default">;
